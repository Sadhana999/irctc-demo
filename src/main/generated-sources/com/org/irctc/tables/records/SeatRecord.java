/*
 * This file is generated by jOOQ.
 */
package com.org.irctc.tables.records;


import com.org.irctc.tables.Seat;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SeatRecord extends UpdatableRecordImpl<SeatRecord> implements Record3<String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>irctc.seat.seat_id</code>.
     */
    public void setSeatId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>irctc.seat.seat_id</code>.
     */
    public String getSeatId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>irctc.seat.seat_number</code>.
     */
    public void setSeatNumber(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>irctc.seat.seat_number</code>.
     */
    public String getSeatNumber() {
        return (String) get(1);
    }

    /**
     * Setter for <code>irctc.seat.status</code>.
     */
    public void setStatus(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>irctc.seat.status</code>.
     */
    public String getStatus() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Seat.SEAT.SEAT_ID;
    }

    @Override
    public Field<String> field2() {
        return Seat.SEAT.SEAT_NUMBER;
    }

    @Override
    public Field<String> field3() {
        return Seat.SEAT.STATUS;
    }

    @Override
    public String component1() {
        return getSeatId();
    }

    @Override
    public String component2() {
        return getSeatNumber();
    }

    @Override
    public String component3() {
        return getStatus();
    }

    @Override
    public String value1() {
        return getSeatId();
    }

    @Override
    public String value2() {
        return getSeatNumber();
    }

    @Override
    public String value3() {
        return getStatus();
    }

    @Override
    public SeatRecord value1(String value) {
        setSeatId(value);
        return this;
    }

    @Override
    public SeatRecord value2(String value) {
        setSeatNumber(value);
        return this;
    }

    @Override
    public SeatRecord value3(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public SeatRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SeatRecord
     */
    public SeatRecord() {
        super(Seat.SEAT);
    }

    /**
     * Create a detached, initialised SeatRecord
     */
    public SeatRecord(String seatId, String seatNumber, String status) {
        super(Seat.SEAT);

        setSeatId(seatId);
        setSeatNumber(seatNumber);
        setStatus(status);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised SeatRecord
     */
    public SeatRecord(com.org.irctc.tables.pojos.Seat value) {
        super(Seat.SEAT);

        if (value != null) {
            setSeatId(value.getSeatId());
            setSeatNumber(value.getSeatNumber());
            setStatus(value.getStatus());
            resetChangedOnNotNull();
        }
    }
}

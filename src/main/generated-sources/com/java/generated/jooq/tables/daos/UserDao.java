/*
 * This file is generated by jOOQ.
 */
package com.java.generated.jooq.tables.daos;


import com.java.generated.jooq.tables.User;
import com.java.generated.jooq.tables.records.UserRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class UserDao extends DAOImpl<UserRecord, com.java.generated.jooq.tables.pojos.User, String> {

    /**
     * Create a new UserDao without any configuration
     */
    public UserDao() {
        super(User.USER, com.java.generated.jooq.tables.pojos.User.class);
    }

    /**
     * Create a new UserDao with an attached configuration
     */
    @Autowired
    public UserDao(Configuration configuration) {
        super(User.USER, com.java.generated.jooq.tables.pojos.User.class, configuration);
    }

    @Override
    public String getId(com.java.generated.jooq.tables.pojos.User object) {
        return object.getUserId();
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.java.generated.jooq.tables.pojos.User> fetchRangeOfUserId(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.java.generated.jooq.tables.pojos.User> fetchByUserId(String... values) {
        return fetch(User.USER.USER_ID, values);
    }

    /**
     * Fetch a unique record that has <code>user_id = value</code>
     */
    public com.java.generated.jooq.tables.pojos.User fetchOneByUserId(String value) {
        return fetchOne(User.USER.USER_ID, value);
    }

    /**
     * Fetch a unique record that has <code>user_id = value</code>
     */
    public Optional<com.java.generated.jooq.tables.pojos.User> fetchOptionalByUserId(String value) {
        return fetchOptional(User.USER.USER_ID, value);
    }

    /**
     * Fetch records that have <code>user_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.java.generated.jooq.tables.pojos.User> fetchRangeOfUserName(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.USER_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_name IN (values)</code>
     */
    public List<com.java.generated.jooq.tables.pojos.User> fetchByUserName(String... values) {
        return fetch(User.USER.USER_NAME, values);
    }

    /**
     * Fetch a unique record that has <code>user_name = value</code>
     */
    public com.java.generated.jooq.tables.pojos.User fetchOneByUserName(String value) {
        return fetchOne(User.USER.USER_NAME, value);
    }

    /**
     * Fetch a unique record that has <code>user_name = value</code>
     */
    public Optional<com.java.generated.jooq.tables.pojos.User> fetchOptionalByUserName(String value) {
        return fetchOptional(User.USER.USER_NAME, value);
    }

    /**
     * Fetch records that have <code>password BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.java.generated.jooq.tables.pojos.User> fetchRangeOfPassword(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.PASSWORD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<com.java.generated.jooq.tables.pojos.User> fetchByPassword(String... values) {
        return fetch(User.USER.PASSWORD, values);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.java.generated.jooq.tables.pojos.User> fetchRangeOfEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<com.java.generated.jooq.tables.pojos.User> fetchByEmail(String... values) {
        return fetch(User.USER.EMAIL, values);
    }

    /**
     * Fetch records that have <code>phone_number BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.java.generated.jooq.tables.pojos.User> fetchRangeOfPhoneNumber(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.PHONE_NUMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>phone_number IN (values)</code>
     */
    public List<com.java.generated.jooq.tables.pojos.User> fetchByPhoneNumber(String... values) {
        return fetch(User.USER.PHONE_NUMBER, values);
    }

    /**
     * Fetch records that have <code>created_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.java.generated.jooq.tables.pojos.User> fetchRangeOfCreatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.CREATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<com.java.generated.jooq.tables.pojos.User> fetchByCreatedBy(String... values) {
        return fetch(User.USER.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>created_date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.java.generated.jooq.tables.pojos.User> fetchRangeOfCreatedDate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(User.USER.CREATED_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_date IN (values)</code>
     */
    public List<com.java.generated.jooq.tables.pojos.User> fetchByCreatedDate(LocalDateTime... values) {
        return fetch(User.USER.CREATED_DATE, values);
    }

    /**
     * Fetch records that have <code>modified_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.java.generated.jooq.tables.pojos.User> fetchRangeOfModifiedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.MODIFIED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modified_by IN (values)</code>
     */
    public List<com.java.generated.jooq.tables.pojos.User> fetchByModifiedBy(String... values) {
        return fetch(User.USER.MODIFIED_BY, values);
    }

    /**
     * Fetch records that have <code>modified_date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.java.generated.jooq.tables.pojos.User> fetchRangeOfModifiedDate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(User.USER.MODIFIED_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modified_date IN (values)</code>
     */
    public List<com.java.generated.jooq.tables.pojos.User> fetchByModifiedDate(LocalDateTime... values) {
        return fetch(User.USER.MODIFIED_DATE, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.java.generated.jooq.tables.pojos.User> fetchRangeOfStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.java.generated.jooq.tables.pojos.User> fetchByStatus(String... values) {
        return fetch(User.USER.STATUS, values);
    }

    /**
     * Fetch records that have <code>role BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.java.generated.jooq.tables.pojos.User> fetchRangeOfRole(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.ROLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role IN (values)</code>
     */
    public List<com.java.generated.jooq.tables.pojos.User> fetchByRole(String... values) {
        return fetch(User.USER.ROLE, values);
    }

    /**
     * Fetch records that have <code>isLoggedIn BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.java.generated.jooq.tables.pojos.User> fetchRangeOfIsloggedin(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(User.USER.ISLOGGEDIN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>isLoggedIn IN (values)</code>
     */
    public List<com.java.generated.jooq.tables.pojos.User> fetchByIsloggedin(Byte... values) {
        return fetch(User.USER.ISLOGGEDIN, values);
    }
}
